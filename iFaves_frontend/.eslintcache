[{"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/index.js":"1","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/reportWebVitals.js":"2","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/App.js":"3","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/components/myFavesList.js":"4","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/components/searchAPI.js":"5","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/components/MyFavesList.js":"6","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/components/SearchAPI.js":"7","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/Components/SearchAPI.js":"8","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/Components/MyFavesList.js":"9","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/Components/DropdownMenu.js":"10","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/ifaves_frontend/src/index.js":"11","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/ifaves_frontend/src/App.js":"12","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/ifaves_frontend/src/reportWebVitals.js":"13","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/ifaves_frontend/src/Components/MyFavesList.js":"14","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/ifaves_frontend/src/Components/DropdownMenu.js":"15","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/ifaves_frontend/src/Components/SearchAPI.js":"16"},{"size":500,"mtime":1610288685638,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1610288685643,"results":"19","hashOfConfig":"18"},{"size":1153,"mtime":1610664646439,"results":"20","hashOfConfig":"18"},{"size":1156,"mtime":1610456144491,"results":"21","hashOfConfig":"18"},{"size":5393,"mtime":1610455812063,"results":"22","hashOfConfig":"18"},{"size":1156,"mtime":1610456144491,"results":"23","hashOfConfig":"18"},{"size":5393,"mtime":1610455812063,"results":"24","hashOfConfig":"18"},{"size":9406,"mtime":1610719803661,"results":"25","hashOfConfig":"18"},{"size":2937,"mtime":1610665757157,"results":"26","hashOfConfig":"18"},{"size":1004,"mtime":1610666453670,"results":"27","hashOfConfig":"18"},{"size":500,"mtime":1610288685638,"results":"28","hashOfConfig":"29"},{"size":1153,"mtime":1610664646439,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1610288685643,"results":"31","hashOfConfig":"29"},{"size":2937,"mtime":1610665757157,"results":"32","hashOfConfig":"29"},{"size":1004,"mtime":1610666453670,"results":"33","hashOfConfig":"29"},{"size":9406,"mtime":1610719803661,"results":"34","hashOfConfig":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"mqrlon",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hpuweh",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/index.js",[],["71","72"],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/reportWebVitals.js",[],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/App.js",[],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/components/myFavesList.js",[],["73","74"],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/components/searchAPI.js",[],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/components/MyFavesList.js",[],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/components/SearchAPI.js",[],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/Components/SearchAPI.js",["75","76","77"],"import React, { Component } from 'react';\nimport {Form, Button, Dropdown, DropdownButton } from 'react-bootstrap';\nimport '../App.css';\n\nclass searchAPI extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: false,\n            searchTerm: '',\n            media: '',\n            dropdownTitle: 'Select Media',\n            searchResult: []\n        };\n        this.searchTerm = this.searchTerm.bind(this);\n        this.mediaSelect = this.mediaSelect.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.addToFave = this.addToFave.bind(this);\n    }\n\n    //Change 'searchTerm' state depending on what text was entered into form\n    searchTerm(e) {\n        this.setState({\n            searchTerm: e\n        });\n    }\n    //Change 'media' state to selected dropdown item's name,\n    //Change 'dropdownTitle' state to selected dropdown item's text\n    mediaSelect(name, text) {\n        this.setState({\n            media: name,\n            dropdownTitle: text\n        });\n    }\n\n    //Search iTunes Store for media\n    handleSearch(e) {\n        this.setState({\n            searchResult: [] //Set 'searchResult' state to [] so it displays only new search results\n        });\n        fetch(\"/search\", { //send POST request to server (as request requires body to be sent to server)\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }, // send server search terms to enter in API\n            body: JSON.stringify({\n                searchTerm: this.state.searchTerm,\n                media: this.state.media\n            }),\n        })\n        .then(res => res.json()) //Get results from server\n        .then(\n            (result) => {\n                if (result.resultCount == 0) { //If no results, don't update 'searchResult[]'\n                    this.setState({\n                        isLoaded: true\n                    });\n                }\n                else if (this.state.media == 'audiobook') { // audiobook data has 'collectionName' & 'collectionPrice' instead of 'trackName' & 'trackPrice'\n                    for (let i = 0; i < result.resultCount; i++) { //Loop through results, add each result object to 'searchResult[]' array\n                        console.log(result);\n                        let searchItem = {};\n                        searchItem.id = i;\n                        searchItem.artistName = result.results[i].artistName;\n                        searchItem.mediaKind = result.results[i].kind;\n                        searchItem.trackName = result.results[i].collectionName;\n                        searchItem.trackPrice = result.results[i].collectionPrice;\n                        searchItem.releaseDate = result.results[i].releaseDate;\n                        searchItem.genre = result.results[i].primaryGenreName;\n                        searchItem.contentAdvisory = result.results[i].contentAdvisoryRating;\n                        this.state.searchResult.push(searchItem);\n                    }\n                    this.setState({\n                        isLoaded: true\n                    });\n                }\n                else {\n                    for (let i = 0; i < result.resultCount; i++) { //Loop through results, add each result object to 'searchResult[]' array\n                        console.log(result);\n                        let searchItem = {};\n                        searchItem.id = i;\n                        searchItem.artistName = result.results[i].artistName;\n                        searchItem.mediaKind = result.results[i].kind;\n                        searchItem.trackName = result.results[i].trackName;\n                        searchItem.trackPrice = result.results[i].trackPrice;\n                        searchItem.releaseDate = result.results[i].releaseDate;\n                        searchItem.genre = result.results[i].primaryGenreName;\n                        searchItem.contentAdvisory = result.results[i].contentAdvisoryRating;\n                        this.state.searchResult.push(searchItem);\n                    }\n                    this.setState({\n                        isLoaded: true\n                    });\n                }\n            }\n        )\n        .catch(error => console.log('Error:', error));\n        e.preventDefault(); //To stop page reloading before displaying fetch results\n    }\n\n    //Add search result item to 'favourites' list \n    addToFave(item) {\n        fetch(\"/addFave\", { //send POST request to server\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }, // send server search result 'item' details, which user wants to add to favourites\n            body: JSON.stringify({\n                artistName: item.artistName, \n                mediaKind: item.mediaKind, \n                trackName: item.trackName, \n                trackPrice: item.trackPrice, \n                releaseDate: item.releaseDate, \n                genre: item.genre, \n                contentAdvisory: item.contentAdvisory\n            }),\n        })\n        .then(res => res.json())\n        .catch(error => console.log('Error:', error));\n        alert('Added to favourites!'); //alert user that item was added to favourites\n    }\n\n    render() {\n        const { searchResult } = this.state;\n        return (\n            <div className=\"App\">\n                <h3 className=\"pageTitle\">Search Itunes and Apple Books Store</h3>\n                <link\n                    rel=\"stylesheet\"\n                    href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"\n                    integrity=\"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\"\n                    crossorigin=\"anonymous\"/>\n                <Form className=\"searchForm\">\n                    <Form.Group>\n                        <Form.Label>Search For:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"search for...\" onChange={(e) => this.searchTerm(e.target.value)}/>\n                        <br></br>\n                        <Form.Label>Type of Media:</Form.Label>\n                        <Dropdown  className=\"dropdownMenu\" id=\"formDropdown\" >\n                            <DropdownButton title={this.state.dropdownTitle}>\n                                <Dropdown.Item name=\"movie\" onClick={(e) => this.mediaSelect(e.target.name, e.target.textContent)}>Movie</Dropdown.Item>\n                                <Dropdown.Item name=\"podcast\" onClick={(e) => this.mediaSelect(e.target.name, e.target.textContent)}>Podcast</Dropdown.Item>\n                                <Dropdown.Item name=\"music\" onClick={(e) => this.mediaSelect(e.target.name, e.target.textContent)}>Music</Dropdown.Item>\n                                <Dropdown.Item name=\"audiobook\" onClick={(e) => this.mediaSelect(e.target.name, e.target.textContent)}>Audiobook</Dropdown.Item>\n                                <Dropdown.Item name=\"shortFilm\" onClick={(e) => this.mediaSelect(e.target.name, e.target.textContent)}>Short Film</Dropdown.Item>\n                                <Dropdown.Item name=\"tvShow\" onClick={(e) => this.mediaSelect(e.target.name, e.target.textContent)}>TV Show</Dropdown.Item>\n                                <Dropdown.Item name=\"software\" onClick={(e) => this.mediaSelect(e.target.name, e.target.textContent)}>Software</Dropdown.Item>\n                                <Dropdown.Item name=\"ebook\" onClick={(e) => this.mediaSelect(e.target.name, e.target.textContent)}>eBook</Dropdown.Item>\n                                <Dropdown.Item name=\"\" onClick={(e) => this.mediaSelect(e.target.name, e.target.textContent)}><b>All</b></Dropdown.Item>\n                            </DropdownButton>\n                        </Dropdown>\n                    </Form.Group>\n                    <br></br>\n                    <button className=\"formButton\" variant=\"primary\" type=\"submit\" onClick={this.handleSearch} >\n                    Search\n                    </button>\n                </Form>\n                <br></br>\n                <h2>Results</h2>\n                <ul id=\"resultList\">\n                    {searchResult.map(result => { //map through array of 'searchResult's + include 'add to fave' button for each item\n                        return (\n                            <li id=\"resultList\" key={result.id}>\n                                \n                                <p><b>{result.trackName}</b>         ({result.contentAdvisory})</p>\n                                <p>By: {result.artistName}</p>\n                                <p><small>{result.mediaKind} ({result.genre}) - released {result.releaseDate}</small></p>\n                                <p><b>${result.trackPrice} USD</b></p>\n                                <button id=\"addButton\" onClick={(e) => this.addToFave(result)}>Add to iFaves</button>\n                                <hr></hr>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default searchAPI;\n\n/*\nREFERENCES:\nDropdown Menu:  https://stackoverflow.com/questions/56388220/how-can-i-properly-change-the-title-of-react-bootstrap-dropdownbutton-on-click\nAdd fetched data to searchResult array:  https://www.codegrepper.com/code-examples/javascript/add+a+new+key+value+pair+js\n*/\n","/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/Components/MyFavesList.js",[],["78","79"],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/iFaves_frontend/src/Components/DropdownMenu.js",[],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/ifaves_frontend/src/index.js",[],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/ifaves_frontend/src/App.js",[],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/ifaves_frontend/src/reportWebVitals.js",[],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/ifaves_frontend/src/Components/MyFavesList.js",[],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/ifaves_frontend/src/Components/DropdownMenu.js",[],"/Users/hollyhenaghan/Documents/L2T21-Capstone/iFaves_backend/ifaves_frontend/src/Components/SearchAPI.js",["80","81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"83","replacedBy":"87"},{"ruleId":"85","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":15,"nodeType":"91","messageId":"92","endLine":2,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":54,"column":40,"nodeType":"95","messageId":"96","endLine":54,"endColumn":42},{"ruleId":"93","severity":1,"message":"94","line":59,"column":43,"nodeType":"95","messageId":"96","endLine":59,"endColumn":45},{"ruleId":"83","replacedBy":"97"},{"ruleId":"85","replacedBy":"98"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":15,"nodeType":"91","messageId":"92","endLine":2,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":54,"column":40,"nodeType":"95","messageId":"96","endLine":54,"endColumn":42},{"ruleId":"93","severity":1,"message":"94","line":59,"column":43,"nodeType":"95","messageId":"96","endLine":59,"endColumn":45},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["99"],["100"],"no-global-assign","no-unsafe-negation"]